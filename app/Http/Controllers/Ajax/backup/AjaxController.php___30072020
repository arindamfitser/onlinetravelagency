<?php
namespace App\Http\Controllers\Ajax;
use App\Hotels;
use App\Rooms;
use App\RoomCategory;
use App\RoomDetail;
use App\RoomGallery;
use App\RoomAvailability;
use App\Cart;
use App\User;
use App\StatesTranslation;
use Mail;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\Storage;

class AjaxController extends Controller
{
  public function __construct()
  {
        //$this->middleware('auth');
  }

  public function addWishlist(Request $request){
      $id= DB::table('wishlist')->insert(
       ['hotel_id' => $request['hotel_id'], 'user_id' => $request['user_id']]
      );
      if($id){
         echo 'success';
      }else{
         echo 'error';
      }

  }

  public function getWihlistbyUser(Request $request){
    $user = DB::table('wishlist')->where('user_id', $request['user_id'])->get()->all();
    echo  json_encode($user);
  }

  public function checkUserEmail(Request $request){
    $user = User::all()->where('email', $request['email'])->first();
    $U = auth('web')->user();  
    if ($U){
        return \Response::json(array('msg' => $request['email'].' email is available','status'=>'false'));
    }else if($user) {
        //return \Response::json(array('msg' => $request['email'].' is already taken','status'=>'true'));
        return \Response::json(array('msg' => $request['email'].' is already taken','status'=>'false'));
    }else{
        return \Response::json(array('msg' => $request['email'].' email is available','status'=>'false'));
    }
  }

  public function doSendcontact(Request $request){

       $e_data = [
            'first_name' => $request->first_name,
            'last_name' => $request->last_name,
            'email' => $request->email,
            'contact' => $request->contact,
            'subject' => $request->subject,
            'body' => $request->message,
        ];
        Mail::send('emails.contact', ['e_data' => $e_data], function ($m) use ($e_data) {
            $m->from('no-reply@fitser.com', get_option('blogname'));
            $m->to(_get_option('email'), $e_data['first_name'].' '.$e_data['last_name'])->subject('New Contact mail :gupta hotel');
        });
        echo json_encode(array('status' => 1));

  }
  public function get_state(Request $request){
    $country_id = $request->country_id;
    $states = StatesTranslation::where('countries_id', $country_id)->get()->all();
    $html = '';
    foreach ($states as $key => $state) {
        $html .= '<option value="'.$state->states_id.'">'.$state->states_name.'</option>';
    }
    echo $html;
  }

  public function getmap(Request $request){
    $id = $request->id;
    $tpid = $request->tpid;
    $list = array();
    switch ($request->type) {
      case 'accommodation':
        switch ($request->condition) {
          case 'region':
            $data = DB::table('hotels')->join('hotel_accommodation_relations', 'hotels.id', '=', 'hotel_accommodation_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotel_accommodation_relations.accommodation_id', '=', $tpid)->where('hotels.region_id', '=', $id)->groupBy('hotels.id')->get()->all();
            foreach($data as $hs){
              $list[] =  array('name' => $hs->hotels_name, 'location' => array($hs->latitude, $hs->longitude), 'address' =>$hs->location, 'image' => Storage::disk('local')->url($hs->featured_image), 'link' => route('hotel.details', ['slug' => $hs->hotels_slug]));
            }
            echo json_encode($list);
            break;
          case 'country':
            $data = DB::table('hotels')->join('hotel_accommodation_relations', 'hotels.id', '=', 'hotel_accommodation_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotel_accommodation_relations.accommodation_id', '=', $tpid)->where('hotels.country_id', '=', $id)->groupBy('hotels.id')->get()->all();
            foreach($data as $hs){
              $list[] =  array('name' => $hs->hotels_name, 'location' => array($hs->latitude, $hs->longitude), 'address' =>$hs->location, 'image' => Storage::disk('local')->url($hs->featured_image), 'link' => route('hotel.details', ['slug' => $hs->hotels_slug]));
            }
            echo json_encode($list);
            break;
            case 'state':
            $data = DB::table('hotels')->join('hotel_accommodation_relations', 'hotels.id', '=', 'hotel_accommodation_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotel_accommodation_relations.accommodation_id', '=', $tpid)->where('hotels.state_id', '=', $id)->groupBy('hotels.id')->get()->all();
            foreach($data as $hs){
              $list[] =  array('name' => $hs->hotels_name, 'location' => array($hs->latitude, $hs->longitude), 'address' =>$hs->location, 'image' => Storage::disk('local')->url($hs->featured_image), 'link' => route('hotel.details', ['slug' => $hs->hotels_slug]));
            }
            echo json_encode($list);
            break;
            case 'town':
            $data = DB::table('hotels')->join('hotel_accommodation_relations', 'hotels.id', '=', 'hotel_accommodation_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotel_accommodation_relations.accommodation_id', '=', $tpid)->where('hotels.town', '=', $id)->groupBy('hotels.id')->get()->all();
            foreach($data as $hs){
              $list[] =  array('name' => $hs->hotels_name, 'location' => array($hs->latitude, $hs->longitude), 'address' =>$hs->location, 'image' => Storage::disk('local')->url($hs->featured_image), 'link' => route('hotel.details', ['slug' => $hs->hotels_slug]));
            }
            echo json_encode($list);
            break;
        }
        break;
        case 'experience':
        switch ($request->condition) {
          case 'region':
            $data = DB::table('hotels')->join('hotel_experiences_relations', 'hotels.id', '=', 'hotel_experiences_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotel_experiences_relations.experiences_id', '=', $tpid)->where('hotels.region_id', '=', $id)->groupBy('hotels.id')->get()->all();
            foreach($data as $hs){
              $list[] =  array('name' => $hs->hotels_name, 'location' => array($hs->latitude, $hs->longitude), 'address' =>$hs->location, 'image' => Storage::disk('local')->url($hs->featured_image), 'link' => route('hotel.details', ['slug' => $hs->hotels_slug]));
            }
            echo json_encode($list);
            break;
          case 'country':
            $data = DB::table('hotels')->join('hotel_experiences_relations', 'hotels.id', '=', 'hotel_experiences_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotel_experiences_relations.experiences_id', '=', $tpid)->where('hotels.country_id', '=', $id)->groupBy('hotels.id')->get()->all();
            foreach($data as $hs){
              $list[] =  array('name' => $hs->hotels_name, 'location' => array($hs->latitude, $hs->longitude), 'address' =>$hs->location, 'image' => Storage::disk('local')->url($hs->featured_image), 'link' => route('hotel.details', ['slug' => $hs->hotels_slug]));
            }
            echo json_encode($list);
            break;
            case 'state':
            $data = DB::table('hotels')->join('hotel_experiences_relations', 'hotels.id', '=', 'hotel_experiences_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotel_experiences_relations.experiences_id', '=', $tpid)->where('hotels.state_id', '=', $id)->groupBy('hotels.id')->get()->all();
            foreach($data as $hs){
              $list[] =  array('name' => $hs->hotels_name, 'location' => array($hs->latitude, $hs->longitude), 'address' =>$hs->location, 'image' => Storage::disk('local')->url($hs->featured_image), 'link' => route('hotel.details', ['slug' => $hs->hotels_slug]));
            }
            echo json_encode($list);
            break;
            case 'town':
            $data = DB::table('hotels')->join('hotel_experiences_relations', 'hotels.id', '=', 'hotel_experiences_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotel_experiences_relations.experiences_id', '=', $tpid)->where('hotels.town', '=', $id)->groupBy('hotels.id')->get()->all();
            foreach($data as $hs){
              $list[] =  array('name' => $hs->hotels_name, 'location' => array($hs->latitude, $hs->longitude), 'address' =>$hs->location, 'image' => Storage::disk('local')->url($hs->featured_image), 'link' => route('hotel.details', ['slug' => $hs->hotels_slug]));
            }
            echo json_encode($list);
            break;
          
        }

        break;
        case 'inspiration':
          switch ($request->condition) {
          case 'region':
            $data = DB::table('hotels')->join('hotel_inspirations_relations', 'hotels.id', '=', 'hotel_inspirations_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotel_inspirations_relations.inspirations_id', '=', $tpid)->where('hotels.region_id', '=', $id)->groupBy('hotels.id')->get()->all();
            foreach($data as $hs){
              $list[] =  array('name' => $hs->hotels_name, 'location' => array($hs->latitude, $hs->longitude), 'address' =>$hs->location, 'image' => Storage::disk('local')->url($hs->featured_image), 'link' => route('hotel.details', ['slug' => $hs->hotels_slug]));
            }
            echo json_encode($list);
            break;
          case 'country':
            $data = DB::table('hotels')->join('hotel_inspirations_relations', 'hotels.id', '=', 'hotel_inspirations_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotel_inspirations_relations.inspirations_id', '=', $tpid)->where('hotels.country_id', '=', $id)->groupBy('hotels.id')->get()->all();
            foreach($data as $hs){
              $list[] =  array('name' => $hs->hotels_name, 'location' => array($hs->latitude, $hs->longitude), 'address' =>$hs->location, 'image' => Storage::disk('local')->url($hs->featured_image), 'link' => route('hotel.details', ['slug' => $hs->hotels_slug]));
            }
            echo json_encode($list);
            break;
            case 'state':
            $data = DB::table('hotels')->join('hotel_inspirations_relations', 'hotels.id', '=', 'hotel_inspirations_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotel_inspirations_relations.inspirations_id', '=', $tpid)->where('hotels.state_id', '=', $id)->groupBy('hotels.id')->get()->all();
            foreach($data as $hs){
              $list[] =  array('name' => $hs->hotels_name, 'location' => array($hs->latitude, $hs->longitude), 'address' =>$hs->location, 'image' => Storage::disk('local')->url($hs->featured_image), 'link' => route('hotel.details', ['slug' => $hs->hotels_slug]));
            }
            echo json_encode($list);
            break;
            case 'town':
            $data = DB::table('hotels')->join('hotel_inspirations_relations', 'hotels.id', '=', 'hotel_inspirations_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotel_inspirations_relations.inspirations_id', '=', $tpid)->where('hotels.town', '=', $id)->groupBy('hotels.id')->get()->all();
            foreach($data as $hs){
              $list[] =  array('name' => $hs->hotels_name, 'location' => array($hs->latitude, $hs->longitude), 'address' =>$hs->location, 'image' => Storage::disk('local')->url($hs->featured_image), 'link' => route('hotel.details', ['slug' => $hs->hotels_slug]));
            }
            echo json_encode($list);
            break;
          
        }

        break;
        case 'species':
              switch ($request->condition) {
          case 'region':
            $data = DB::table('hotels')->join('hotel_species_relations', 'hotels.id', '=', 'hotel_species_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotels.region_id', '=', $id)->where('hotel_species_relations.species_id', '=', $tpid)->groupBy('hotels.id')->get()->all();
            foreach($data as $hs){
              $list[] =  array('name' => $hs->hotels_name, 'location' => array($hs->latitude, $hs->longitude), 'address' =>$hs->location, 'image' => Storage::disk('local')->url($hs->featured_image), 'link' => route('hotel.details', ['slug' => $hs->hotels_slug]));
            }
            echo json_encode($list);
            break;
          case 'country':
            $data = DB::table('hotels')->join('hotel_species_relations', 'hotels.id', '=', 'hotel_species_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotels.country_id', '=', $id)->where('hotel_species_relations.species_id', '=', $tpid)->groupBy('hotels.id')->get()->all();
            foreach($data as $hs){
              $list[] =  array('name' => $hs->hotels_name, 'location' => array($hs->latitude, $hs->longitude), 'address' =>$hs->location, 'image' => Storage::disk('local')->url($hs->featured_image), 'link' => route('hotel.details', ['slug' => $hs->hotels_slug]));
            }
            echo json_encode($list);
            break;
            case 'state':
            $data = DB::table('hotels')->join('hotel_species_relations', 'hotels.id', '=', 'hotel_species_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotels.state_id', '=', $id)->where('hotel_species_relations.species_id', '=', $tpid)->groupBy('hotels.id')->get()->all();
            foreach($data as $hs){
              $list[] =  array('name' => $hs->hotels_name, 'location' => array($hs->latitude, $hs->longitude), 'address' =>$hs->location, 'image' => Storage::disk('local')->url($hs->featured_image), 'link' => route('hotel.details', ['slug' => $hs->hotels_slug]));
            }
            echo json_encode($list);
            break;
            case 'town':
            $data = DB::table('hotels')->join('hotel_species_relations', 'hotels.id', '=', 'hotel_species_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotels.town', '=', $id)->where('hotel_species_relations.species_id', '=', $tpid)->groupBy('hotels.id')->get()->all();
            foreach($data as $hs){
              $list[] =  array('name' => $hs->hotels_name, 'location' => array($hs->latitude, $hs->longitude), 'address' =>$hs->location, 'image' => Storage::disk('local')->url($hs->featured_image), 'link' => route('hotel.details', ['slug' => $hs->hotels_slug]));
            }
            echo json_encode($list);
            break;
          
        }

        break;
    }
  }

  public function get_region_data(Request $request){
    $id = $request->id;
    switch ($request->cat) {
      case 'accommodation':
        switch($request->col_type){
          case 'region':
            $country = getAccommodationCountry($id);
            $html = '';
            foreach($country as $c){
              $html .= '<li onClick="getMap(\'' . $c->countries_id . '\',\'country\',\'' . $request->cat . '\',this)">'.$c->countries_name.'</li>';
            }
            echo $html;
            break;
          case 'country':
           $states = DB::table('states_translations')->join('hotels', 'states_translations.states_id', '=', 'hotels.state_id')->join('hotel_accommodation_relations', 'hotels.id', '=', 'hotel_accommodation_relations.hotel_id')->where('hotels.country_id', '=', $id)->orderBy('states_translations.states_name', 'ASC')->groupBy('hotels.state_id')->get()->all();
            $html = '';
            foreach($states as $s){
              $html .= '<li onClick="getMap(\'' . $s->states_id . '\',\'state\',\'' . $request->cat . '\',this)">'.$s->states_name.'</li>';
            }
            echo $html;
            break;
          case 'state':
           $towns = DB::table('hotels')->join('hotel_accommodation_relations', 'hotels.id', '=', 'hotel_accommodation_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotels.state_id', '=', $id)->orderBy('hotels.town', 'ASC')->groupBy('hotels.town')->get()->all();
            $html = '';
            foreach($towns as $t){
              //$html .= '<li onClick="getMap(\'' . $t->town . '\',\'town\',\'' . $request->cat . '\',this)">'.$t->town.'</li>';
              $html .= '<li  onclick="searchByKeyword(\'' . $t->town . '\')">'.$t->town.'</li>';
            }
            echo $html;
            break;
           case 'town':
           $hotels = DB::table('hotels')->join('hotel_accommodation_relations', 'hotels.id', '=', 'hotel_accommodation_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotels.town', '=', $id)->orderBy('hotels_translations.hotels_name', 'ASC')->groupBy('hotels.id')->get()->all();
            $html = '';
            foreach($hotels as $h){
              $html .= '<li><a href="'.route('hotel.details', ['slug' => $h->hotels_slug]).'">'.$h->hotels_name.'</a></li>';
            }
            echo $html;
            break;
        }
      break;
      case 'experience':
      switch($request->col_type){
        case 'region':
        $country = getExperienceCountry($id);
        $html = '';
        foreach($country as $c){
          $html .= '<li onClick="getMap(\'' . $c->countries_id . '\',\'country\',\'' . $request->cat . '\',this)">'.$c->countries_name.'</li>';
        }
        echo $html;
        break;
        case 'country':
        $states = DB::table('states_translations')->join('hotels', 'states_translations.states_id', '=', 'hotels.state_id')->join('hotel_experiences_relations', 'hotels.id', '=', 'hotel_experiences_relations.hotel_id')->where('hotels.country_id', '=', $id)->orderBy('states_translations.states_name', 'ASC')->groupBy('hotels.state_id')->get()->all();
        $html = '';
        foreach($states as $s){
          $html .= '<li onClick="getMap(\'' . $s->states_id . '\',\'state\',\'' . $request->cat . '\',this)">'.$s->states_name.'</li>';
        }
        echo $html;
        break;
        case 'state':
        $towns = DB::table('hotels')->join('hotel_experiences_relations', 'hotels.id', '=', 'hotel_experiences_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotels.state_id', '=', $id)->orderBy('hotels.town', 'ASC')->groupBy('hotels.town')->get()->all();
        $html = '';
        foreach($towns as $t){
          $html .= '<li  onclick="searchByKeyword(\'' . $t->town . '\')">'.$t->town.'</li>';
        }
        echo $html;
        break;
        case 'town':
        $hotels = DB::table('hotels')->join('hotel_experiences_relations', 'hotels.id', '=', 'hotel_experiences_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotels.town', '=', $id)->orderBy('hotels_translations.hotels_name', 'ASC')->groupBy('hotels.id')->get()->all();
        $html = '';
        foreach($hotels as $h){
          $html .= '<li><a href="'.route('hotel.details', ['slug' => $h->hotels_slug]).'">'.$h->hotels_name.'</a></li>';
        }
        echo $html;
        break;
      }
      break;
      case 'inspiration':
      switch($request->col_type){
        case 'region':
        $country = getExperienceCountry($id);
        $html = '';
        foreach($country as $c){
          $html .= '<li onClick="getMap(\'' . $c->countries_id . '\',\'country\',\'' . $request->cat . '\',this)">'.$c->countries_name.'</li>';
        }
        echo $html;
        break;
        case 'country':
        $states = DB::table('states_translations')->join('hotels', 'states_translations.states_id', '=', 'hotels.state_id')->join('hotel_inspirations_relations', 'hotels.id', '=', 'hotel_inspirations_relations.hotel_id')->where('hotels.country_id', '=', $id)->orderBy('states_translations.states_name', 'ASC')->groupBy('hotels.state_id')->get()->all();
        $html = '';
        foreach($states as $s){
          $html .= '<li onClick="getMap(\'' . $s->states_id . '\',\'state\',\'' . $request->cat . '\',this)">'.$s->states_name.'</li>';
        }
        echo $html;
        break;
        case 'state':
        $towns = DB::table('hotels')->join('hotel_inspirations_relations', 'hotels.id', '=', 'hotel_inspirations_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotels.state_id', '=', $id)->orderBy('hotels.town', 'ASC')->groupBy('hotels.town')->get()->all();
        $html = '';
        foreach($towns as $t){
          $html .= '<li  onclick="searchByKeyword(\'' . $t->town . '\')">'.$t->town.'</li>';
        }
        echo $html;
        break;
        case 'town':
        $hotels = DB::table('hotels')->join('hotel_inspirations_relations', 'hotels.id', '=', 'hotel_inspirations_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotels.town', '=', $id)->orderBy('hotels_translations.hotels_name', 'ASC')->groupBy('hotels.id')->get()->all();
        $html = '';
        foreach($hotels as $h){
          $html .= '<li><a href="'.route('hotel.details', ['slug' => $h->hotels_slug]).'">'.$h->hotels_name.'</a></li>';
        }
        echo $html;
        break;
      }
      break;
       case 'species':
      switch($request->col_type){
        case 'region':
        $country = getExperienceCountry($id);
        $html = '';
        foreach($country as $c){
          $html .= '<li onClick="getMap(\'' . $c->countries_id . '\',\'country\',\'' . $request->cat . '\',this)">'.$c->countries_name.'</li>';
        }
        echo $html;
        break;
        case 'country':
        $states = DB::table('states_translations')->join('hotels', 'states_translations.states_id', '=', 'hotels.state_id')->join('hotel_species_relations', 'hotels.id', '=', 'hotel_species_relations.hotel_id')->where('hotels.country_id', '=', $id)->orderBy('states_translations.states_name', 'ASC')->groupBy('hotels.state_id')->get()->all();
        $html = '';
        foreach($states as $s){
          $html .= '<li onClick="getMap(\'' . $s->states_id . '\',\'state\',\'' . $request->cat . '\',this)">'.$s->states_name.'</li>';
        }
        echo $html;
        break;
        case 'state':
        $towns = DB::table('hotels')->join('hotel_species_relations', 'hotels.id', '=', 'hotel_species_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotels.state_id', '=', $id)->orderBy('hotels.town', 'ASC')->groupBy('hotels.town')->get()->all();
        $html = '';
        foreach($towns as $t){
          $html .= '<li  onclick="searchByKeyword(\'' . $t->town . '\')">'.$t->town.'</li>';
        }
        echo $html;
        break;
        case 'town':
        $hotels = DB::table('hotels')->join('hotel_species_relations', 'hotels.id', '=', 'hotel_species_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotels.town', '=', $id)->orderBy('hotels_translations.hotels_name', 'ASC')->groupBy('hotels.id')->get()->all();
        $html = '';
        foreach($hotels as $h){
          $html .= '<li><a href="'.route('hotel.details', ['slug' => $h->hotels_slug]).'">'.$h->hotels_name.'</a></li>';
        }
        echo $html;
        break;
      }
      break;
    }
  }

    public function get_region_type_data(Request $request){
    $id = $request->id;
    $data_id = $request->data_id;
    switch ($request->cat) {
      case 'accommodation':
        switch($request->col_type){
          case 'region':
            $country = DB::table('countries_translations')->join('hotels', 'countries_translations.countries_id', '=', 'hotels.country_id')->join('hotel_accommodation_relations', 'hotels.id', '=', 'hotel_accommodation_relations.hotel_id')->where('hotel_accommodation_relations.accommodation_id', '=', $data_id)->where('hotels.region_id', '=', $id)->groupBy('hotels.country_id')->get()->all();
            $html = '';
            foreach($country as $c){
              $html .= '<li onClick="getMap(\'' . $c->countries_id . '\',\'country\',\'' . $request->cat . '\',this)">'.$c->countries_name.'</li>';
            }
            echo $html;
            break;
          case 'country':
           $states = DB::table('states_translations')->join('hotels', 'states_translations.states_id', '=', 'hotels.state_id')->join('hotel_accommodation_relations', 'hotels.id', '=', 'hotel_accommodation_relations.hotel_id')->where('hotel_accommodation_relations.accommodation_id', '=', $data_id)->where('hotels.country_id', '=', $id)->orderBy('states_translations.states_name', 'ASC')->groupBy('hotels.state_id')->get()->all();
            $html = '';
            foreach($states as $s){
              $html .= '<li onClick="getMap(\'' . $s->states_id . '\',\'state\',\'' . $request->cat . '\',this)">'.$s->states_name.'<span class="float-right" onclick="searchByKeyword(\'' . $s->states_name . '\')">ALL</span></li>';
            }
            echo $html;
            break;
          case 'state':
           $towns = DB::table('hotels')->join('hotel_accommodation_relations', 'hotels.id', '=', 'hotel_accommodation_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotel_accommodation_relations.accommodation_id', '=', $data_id)->where('hotels.state_id', '=', $id)->orderBy('hotels.town', 'ASC')->groupBy('hotels.town')->get()->all();
            $html = '';
            foreach($towns as $t){
              $html .= '<li  onclick="searchByKeyword(\'' . $t->town . '\')">'.$t->town.'</li>';
            }
            echo $html;
            break;
          
        }
      break;
      case 'experience':
      switch($request->col_type){
        case 'region':
        $country = getExperienceCountry($id);
        $html = '';
        foreach($country as $c){
          $html .= '<li onClick="getMap(\'' . $c->countries_id . '\',\'country\',\'' . $request->cat . '\',this)">'.$c->countries_name.'</li>';
        }
        echo $html;
        break;
        case 'country':
        $states = DB::table('states_translations')->join('hotels', 'states_translations.states_id', '=', 'hotels.state_id')->join('hotel_experiences_relations', 'hotels.id', '=', 'hotel_experiences_relations.hotel_id')->where('hotel_experiences_relations.experiences_id', '=', $data_id)->where('hotels.country_id', '=', $id)->orderBy('states_translations.states_name', 'ASC')->groupBy('hotels.state_id')->get()->all();
        $html = '';
        foreach($states as $s){
          $html .= '<li onClick="getMap(\'' . $s->states_id . '\',\'state\',\'' . $request->cat . '\',this)">'.$s->states_name.' <span class="float-right" onclick="searchByKeyword(\'' . $s->states_name . '\')">ALL</span></li>';
        }
        echo $html;
        break;
        case 'state':
        $towns = DB::table('hotels')->join('hotel_experiences_relations', 'hotels.id', '=', 'hotel_experiences_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotel_experiences_relations.experiences_id', '=', $data_id)->where('hotels.state_id', '=', $id)->orderBy('hotels.town', 'ASC')->groupBy('hotels.town')->get()->all();
        $html = '';
        foreach($towns as $t){
          $html .= '<li  onclick="searchByKeyword(\'' . $t->town . '\')">'.$t->town.'</li>';
        }
        echo $html;
        break;
        case 'town':
        $hotels = DB::table('hotels')->join('hotel_experiences_relations', 'hotels.id', '=', 'hotel_experiences_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotels.town', '=', $id)->orderBy('hotels_translations.hotels_name', 'ASC')->groupBy('hotels.id')->get()->all();
        $html = '';
        foreach($hotels as $h){
          $html .= '<li><a href="'.route('hotel.details', ['slug' => $h->hotels_slug]).'">'.$h->hotels_name.'</a></li>';
        }
        echo $html;
        break;
      }
      break;
      case 'inspiration':
      switch($request->col_type){
        case 'region':
        $country = DB::table('countries_translations')->join('hotels', 'countries_translations.countries_id', '=', 'hotels.country_id')->join('hotel_inspirations_relations', 'hotels.id', '=', 'hotel_inspirations_relations.hotel_id')->where('hotel_inspirations_relations.inspirations_id', '=', $data_id)->where('hotels.region_id', '=', $id)->groupBy('hotels.country_id')->get()->all();
        $html = '';
        foreach($country as $c){
          $html .= '<li onClick="getMap(\'' . $c->countries_id . '\',\'country\',\'' . $request->cat . '\',this)">'.$c->countries_name.'</li>';
        }
        echo $html;
        break;
        case 'country':
        $states = DB::table('states_translations')->join('hotels', 'states_translations.states_id', '=', 'hotels.state_id')->join('hotel_inspirations_relations', 'hotels.id', '=', 'hotel_inspirations_relations.hotel_id')->where('hotel_inspirations_relations.inspirations_id', '=', $data_id)->where('hotels.country_id', '=', $id)->orderBy('states_translations.states_name', 'ASC')->groupBy('hotels.state_id')->get()->all();
        $html = '';
        foreach($states as $s){
          $html .= '<li onClick="getMap(\'' . $s->states_id . '\',\'state\',\'' . $request->cat . '\',this)">'.$s->states_name.' <span class="float-right" onclick="searchByKeyword(\'' . $s->states_name . '\')">ALL</span></li>';
        }
        echo $html;
        break;
        case 'state':
        $towns = DB::table('hotels')->join('hotel_inspirations_relations', 'hotels.id', '=', 'hotel_inspirations_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->join('hotel_addresses', 'hotels.id', '=', 'hotel_addresses.hotel_id')->where('hotel_inspirations_relations.inspirations_id', '=', $data_id)->where('hotels.state_id', '=', $id)->orderBy('hotels.town', 'ASC')->groupBy('hotels.town')->get()->all();
        $html = '';
        foreach($towns as $t){
          $html .= '<li  onclick="searchByKeyword(\'' . $t->town . '\')">'.$t->town.'</li>';
        }
        echo $html;
        break;
      }
      break;
      case 'species':
      switch($request->col_type){
        case 'region':
        $country = DB::table('countries_translations')->join('hotels', 'countries_translations.countries_id', '=', 'hotels.country_id')->join('hotel_species_relations', 'hotels.id', '=', 'hotel_species_relations.hotel_id')->where('hotel_species_relations.species_id', '=', $data_id)->where('hotels.region_id', '=', $id)->groupBy('hotels.country_id')->get()->all();
        $html = '';
        foreach($country as $c){
          $html .= '<li onClick="getMap(\'' . $c->countries_id . '\',\'country\',\'' . $request->cat . '\',this)">'.$c->countries_name.'</li>';
        }
        echo $html;
        break;
        case 'country':
        $states = DB::table('states_translations')->join('hotels', 'states_translations.states_id', '=', 'hotels.state_id')->join('hotel_species_relations', 'hotels.id', '=', 'hotel_species_relations.hotel_id')->where('hotel_species_relations.species_id', '=', $data_id)->where('hotels.country_id', '=', $id)->orderBy('states_translations.states_name', 'ASC')->groupBy('hotels.state_id')->get()->all();
        $html = '';
        foreach($states as $s){
          $html .= '<li onClick="getMap(\'' . $s->states_id . '\',\'state\',\'' . $request->cat . '\',this)">'.$s->states_name.'<span class="float-right" onclick="searchByKeyword(\'' . $s->states_name . '\')">ALL</span></li>';
        }
        echo $html;
        break;
        case 'state':
        $towns = DB::table('hotels')->join('hotel_species_relations', 'hotels.id', '=', 'hotel_species_relations.hotel_id')->join('hotels_translations', 'hotels.id', '=', 'hotels_translations.hotels_id')->where('hotel_species_relations.species_id', '=', $data_id)->where('hotels.state_id', '=', $id)->orderBy('hotels.town', 'ASC')->groupBy('hotels.town')->get()->all();
        $html = '';
        foreach($towns as $t){
          $html .= '<li  onclick="searchByKeyword(\'' . $t->town . '\')">'.$t->town.'</li>';
        }
        echo $html;
        break;
      }
      break;
    }
  }

  public function suggestRegion(Request $request){
    $region = DB::table('roomxml_region')->Where('name', 'like', '%' .$request->region. '%')->get()->toArray();
                //var_dump($regions);
    echo $regions= json_encode($region);
    exit;
  }

  public function hotelSortOrder(Request $request){
    // $hotelList        = json_decode(stripslashes($request->totalHotelList));
    // $quantity_adults  = $request->quantity_adults;
    // $quantity_childs  = $request->quantity_childs;
    // $quantity_rooms   = $request->quantity_rooms;
    // $result           = json_decode(stripslashes($request->results));
    // $price            = json_decode(stripslashes($request->price));
    // $currency         = $request->currency;

    $hotelList        = json_decode(stripslashes(session('totalHotelList')));
    $quantity_adults  = session('quantity_adults');
    $quantity_childs  = session('quantity_child');
    $quantity_rooms   = session('num_room');
    $result           = json_decode(stripslashes(session('results')));
    $price            = json_decode(stripslashes(session('price')));
    $currency         = session('currency');
    $starZero = $starOne =$starTwo = $starThree = $starFour = $starFive = $finalArray = array();
    $sortType = explode(':', $request->sortingOrder);
    if($sortType[0] == 'Star'){
      if(!empty($hotelList)){
        foreach($hotelList as $key => $hotel){
          $star = '0';
          if(isset($hotel->hotels->stars)){
            $star = $hotel->hotels->stars;
          }
          switch($star){
            case "1":
              $starOne[] = $hotel;
              break;
            case "2":
              $starTwo[] = $hotel;
              break;
            case "3":
              $starThree[] = $hotel;
              break;
            case "4":
              $starFour[] = $hotel;
              break;
            case "5":
              $starFive[] = $hotel;
              break;
            default:
              $starZero[] = $hotel;
              break;
          }
        }
      }
      switch($sortType[1]){
        case "High to Low":
          $finalArray = array_merge($finalArray, $starFive);
          $finalArray = array_merge($finalArray, $starFour);
          $finalArray = array_merge($finalArray, $starThree);
          $finalArray = array_merge($finalArray, $starTwo);
          $finalArray = array_merge($finalArray, $starOne);
          $finalArray = array_merge($finalArray, $starZero);
          break;
        case "Low to High":
          $finalArray = array_merge($finalArray, $starZero);
          $finalArray = array_merge($finalArray, $starOne);
          $finalArray = array_merge($finalArray, $starTwo);
          $finalArray = array_merge($finalArray, $starThree);
          $finalArray = array_merge($finalArray, $starFour);
          $finalArray = array_merge($finalArray, $starFive);
          break;
        default:
          $finalArray = $hotelList;
          break;
      }
    }elseif($sortType[0] == 'Price'){
      switch($sortType[1]){
        case "High to Low":
          arsort($price);
          break;
        case "Low to High":
          asort($price);
          break;
        default:
        asort($price);
          break;
      }
      if(!empty($hotelList)){
        foreach($price as $key => $p){
          if(!empty($hotelList)){
            $finalArray[$key] = $hotelList[$key];
          }
        }
      }
    }else{
      $finalArray = $hotelList;
    }
    $html = view('frontend.hotels.ajaxHotel', compact('finalArray', 'currency', 'result', 'price', 'quantity_adults', 'quantity_childs', 'quantity_rooms'))->render();
    print json_encode(array("success" => TRUE, 'html' => $html));
  }
}
